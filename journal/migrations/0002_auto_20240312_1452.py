# Generated by Django 4.2.2 on 2024-03-12 09:52

from pickle import FALSE, TRUE
from django.contrib.auth.models import User
from django.contrib.auth.models import Group

from django.db import migrations
# Подключаем модуль для работы с датой/веременем
from datetime import datetime, timedelta
# Подключаем модкль генерации случайных чисел
import random

# Получение случайного ИИН в зависимости от даты рождения и пола
# Индивидуальный идентификационный номер (далее — ИИН) содержит 12 цифр и состоит из четырех частей: 
# 1) первая часть — состоит из 6 цифр и включает в себя год рождения (две последние цифры), месяц и дату рождения физического лица; 
# 2) вторая часть — состоит из 1 цифры и включает в себя пол физического лица и век его рождения и определяется следующим образом: 
# 1 — для мужчин, родившихся в 19 веке; 
# 2 — для женщин, родившихся в 19 веке; 
# 3 — для мужчин, родившихся в 20 веке; 
# 4 — для женщин, родившихся в 20 веке; 
# 5 — для мужчин, родившихся в 21 веке; 
# 6 — для женщин, родившихся в 21 веке. 
# В дальнейшем при необходимости применяются резервные цифры 7, 8, 9, 0, использование которых возможно по истечении XXI века, при этом применяются нечетные цифры — для мужчин, четные — для женщин; 
# 3) третья часть — состоит из 4 цифр и включает в себя порядковый номер регистрации в системе; 
# 4) четвертая часть — состоит из 1 цифры, определяемой автоматически и являющейся контрольной цифрой.
def get_iin(data_rozhdeniya, pol):
    # Год, месяц, число
    y = str(data_rozhdeniya.year)[2:]
    m = str(data_rozhdeniya.month)
    if len(m) == 1:
        m = "0" + m
    d = str(data_rozhdeniya.day)
    if len(d) == 1:
        d = "0" + d
    # Пол и век рождения
    if str(data_rozhdeniya.year)[0:2] == "18":
        if pol == "М":
            iin = y + m + d + "1"
        else:
            iin = y + m + d + "2"
    elif str(data_rozhdeniya.year)[0:2] == "19":
        if pol == "М":
            iin = y + m + d + "3"
        else:
            iin = y + m + d + "4"
    elif str(data_rozhdeniya.year)[0:2] == "20":
        if pol == "М":
            iin = y + m + d + "5"
        else:
            iin = y + m + d + "6"
    else:
        if pol == "М":
            iin = y + m + d + "7"
        else:
            iin = y + m + d + "8"    
    iin = iin + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9))
    return iin

# Получение случайной даты в заданном диапазоне дат
#start_dt = datetime.strptime("01.01.1963", "%d.%m.%Y")
#end_dt = datetime.strptime("01.01.2001", "%d.%m.%Y")
#print(get_random_date(start_dt, end_dt))
def get_random_date(start, end):
    delta = end - start
    return start + timedelta(random.randint(0, delta.days))

#data_rozhdeniya = datetime.strptime("28.12.1969", "%d.%m.%Y")
#print(get_iin(data_rozhdeniya, "М"))

# Получение случайного адреса (k - включает ли адрес квартиру)
def get_adres(k):
    ulica = ["ул. Абая", 
            "ул. Алиханова", 
            "ул. Архитектурная", 
            "ул. Баженова", 
            "ул. Байсеитовой", 
            "ул. Ботаническая", 
            "ул. Вавилова", 
            "ул. Воинов-интернационалистов", 
            "ул. Гастелло", 
            "ул. Гончарная", 
            "ул. Грибоедова", 
            "ул. Дружбы", 
            "ул. Ержанова",
            "ул. Ермекова",
            "ул. Жамбыла", 
            "ул. Заводская", 
            "ул. Защитная", 
            "ул. Ипподромная", 
            "ул. Караванная", 
            "ул. Карла Маркса", 
            "ул. Кирпичная", 
            "ул. Кооперации", 
            "ул. Космонавтов", 
            "ул. Курмангазы", 
            "ул. Луговая", 
            "ул. Луначарского", 
            "ул. Махметова", 
            "ул. Маяковского", 
            "ул. Металлистов", 
            "ул. Мира", 
            "ул. Некрасова", 
            "ул. Новоселов",
            "ул. Олимпийская", 
            "ул. Победы", 
            "ул. Привокзальная", 
            "ул. Рыскулова", 
            "ул. Садовая", 
            "ул. Сатпаева", 
            "ул. Степная", 
            "ул. Стремянная", 
            "ул. Таттимбета", 
            "ул. Университетская", 
            "ул. Фрунзе",
            "ул. Чехова", 
            "ул. Чайковского", 
            "ул. Шакирова", 
            "ул. Экибастузская", 
            "ул. Энтузиастов",
            "ул. Юбилейная",
            "ул. Южная"
        ]
    if (k==True):
        adres = random.choice(ulica) + ", " + str(random.randint(1, 200)) + "-" + str(random.randint(1, 200)) 
    else:
        adres = random.choice(ulica) + ", " + str(random.randint(1, 200)) 
    return adres

# Получение случайного телефона
def get_telefon():
    if random.randint(0, 1) == 1:
        telefon = "+7-701-"
    else:
        telefon = "+7-705-" 
    telefon = telefon + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) + "-" + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) 
    return telefon

# Найти или Добавить Факультет
global dict_faculty
dict_faculty = {}

def get_faculty(apps, val):   
    # Поиск 
    if val in dict_faculty.values():
        for k, v in dict_faculty.items():
            if v == val:
                return k    
    else:
        Faculty = apps.get_model("journal", "Faculty")
        faculty = Faculty()
        faculty.title = val
        faculty.save()
        dict_faculty[faculty.id] = faculty.title
        return faculty.id

# Добавить Специальность
def insert_speciality(apps, param):
    Speciality = apps.get_model("journal", "Speciality")
    speciality = Speciality()
    speciality.cipher = param[0]
    speciality.title = param[1]
    speciality.faculty_id = param[2]
    speciality.save()
    return 

# Добавить Группу
def insert_gruppa(apps, param):
    Gruppa = apps.get_model("journal", "Gruppa")
    gruppa = Gruppa()
    gruppa.cipher = param[0]
    gruppa.speciality_id = param[1]
    gruppa.language = param[2]
    gruppa.save()
    return 

# Добавить Студента 
def insert_student(apps, param):   
    Student = apps.get_model("journal", "Student")
    student = Student()
    student.full_name = param[0]
    student.sex = param[1]
    student.iin = get_iin(param[2], param[1])
    student.birthday = param[2]
    student.phone = param[3]
    student.address = param[4]
    student.gruppa_id = param[5]
    student.save()
    return

## Добавить дисциплины 
#def insert_discipline(apps, param):   
#    Discipline = apps.get_model("journal", "Discipline")
#    discipline = Discipline()
#    discipline.title = param[0]   
#    discipline.save()
#    return

# Найти или Добавить Учебные дисциплины
global dict_discipline
dict_discipline = {}

def get_discipline(apps, val):   
    # Поиск 
    if val in dict_discipline.values():
        for k, v in dict_discipline.items():
            if v == val:
                return k    
    else:
        Discipline = apps.get_model("journal", "Discipline")
        discipline = Discipline()
        discipline.title = val
        discipline.save()
        dict_discipline[discipline.id] = discipline.title
        return discipline.id

# Добавить Расписание 
def insert_schedule(apps, param):   
    Schedule = apps.get_model("journal", "Schedule")
    schedule = Schedule()
    schedule.dates = param[0]   
    schedule.discipline_id = param[1]   
    schedule.gruppa_id = param[2]   
    schedule.save()
    return

# Добавить Посещение 
def insert_visit(apps, param):   
    Visit = apps.get_model("journal", "Visit")
    visit = Visit()
    visit.schedule_id = param[0]   
    visit.student_id = param[1]   
    if random.randint(0, 20) == 1:      # 1 из 20 пропускает занятие
        visit.visited = False
    else:
        visit.visited = True
    visit.save()
    return

# Добавить Успеваемость 
def insert_rating(apps, param):   
    Rating = apps.get_model("journal", "Rating")
    rating = Rating()
    rating.dater = param[0]   
    rating.course = param[1]   
    rating.semester = param[2]   
    rating.discipline_id = param[3]   
    rating.student_id = param[4]  
    if random.randint(0, 1) == 1:      # 1 из 2 получает 5
        rating.value = 5
    else:
        rating.value = 4
    rating.save()
    return

# Добавить Новости
def insert_news(apps, param):
    News = apps.get_model("journal", "News")
    news = News()
    news.daten = param[0]
    news.title = param[1]
    news.details = param[2]
    news.photo = param[3]
    news.save()
    return 

# Начальные данные 
def new_data(apps, schema_editor):
    try:
        # Суперпользователь id=1
        user = User.objects.create_superuser(username='root',
        email='news080324@mail.ru',
        first_name='Алексей', 
        last_name='Дюднев',
        password='SsNn5678+-@')
        print("Суперпользователь создан")
    
        # Группа менеджеров
        managers = Group.objects.get_or_create(name = 'Managers')
        managers = Group.objects.get(name='Managers')
        print("Группа менеджеров создана")
    
        # Пользователь с ролью менеджера id=2
        user = User.objects.create_user(username='manager', password='Ss0066+-', email='manager@mail.ru', first_name='Вадим', last_name='Куляев')
        managers.user_set.add(user)
        print("Менеджер добавлен в группу менеджеров")

        # Простые пользователи (заявители) id3-27
        user = User.objects.create_user(username='user1', password='Uu0066+-', email='user1@mail.ru', first_name='Дина', last_name='Мусина', last_login=datetime.now())
        user = User.objects.create_user(username='user2', password='Uu0066+-', email='user2@mail.ru', first_name='Адия', last_name='Жунусова', last_login=datetime.now())
        user = User.objects.create_user(username='user3', password='Uu0066+-', email='user3@mail.ru', first_name='Айнура', last_name='Кенина', last_login=datetime.now())
        user = User.objects.create_user(username='user4', password='Uu0066+-', email='user4@mail.ru', first_name='Рустем', last_name='Какимов', last_login=datetime.now())
        user = User.objects.create_user(username='user5', password='Uu0066+-', email='user5@mail.ru', first_name='Алишер', last_name='Кабдуалиев', last_login=datetime.now())
        user = User.objects.create_user(username='user6', password='Uu0066+-', email='user6@mail.ru', first_name='Бауржан', last_name='Арыкбаев', last_login=datetime.now())
        user = User.objects.create_user(username='user7', password='Uu0066+-', email='user7@mail.ru', first_name='Алишер', last_name='Танатаров', last_login=datetime.now())
        user = User.objects.create_user(username='user8', password='Uu0066+-', email='user8@mail.ru', first_name='Мерует', last_name='Искакова', last_login=datetime.now())
        user = User.objects.create_user(username='user9', password='Uu0066+-', email='user9@mail.ru', first_name='Ольга', last_name='Муравьева', last_login=datetime.now())
        user = User.objects.create_user(username='user10', password='Uu0066+-', email='user10@mail.ru', first_name='Ақжарқын', last_name='Сансызбаева', last_login=datetime.now())
        user = User.objects.create_user(username='user11', password='Uu0066+-', email='user11@mail.ru', first_name='Арайлым', last_name='Алматова', last_login=datetime.now())
        user = User.objects.create_user(username='user12', password='Uu0066+-', email='user12@mail.ru', first_name='Айгерім', last_name='Дүйсенбиева', last_login=datetime.now())
        user = User.objects.create_user(username='user13', password='Uu0066+-', email='user13@mail.ru', first_name='Салтанат', last_name='Зиноллаева', last_login=datetime.now())
        user = User.objects.create_user(username='user14', password='Uu0066+-', email='user14@mail.ru', first_name='Сейтқасым', last_name='Болат', last_login=datetime.now())
        user = User.objects.create_user(username='user15', password='Uu0066+-', email='user15@mail.ru', first_name='Сара', last_name='Фазилова', last_login=datetime.now())
        user = User.objects.create_user(username='user16', password='Uu0066+-', email='user16@mail.ru', first_name='Бектас', last_name='Ерсейіт', last_login=datetime.now())
        user = User.objects.create_user(username='user17', password='Uu0066+-', email='user17@mail.ru', first_name='Диас', last_name='Мырзаш', last_login=datetime.now())
        user = User.objects.create_user(username='user18', password='Uu0066+-', email='user18@mail.ru', first_name='Нұржан', last_name='Жүрсінбек', last_login=datetime.now())
        user = User.objects.create_user(username='user19', password='Uu0066+-', email='user19@mail.ru', first_name='Дина', last_name='Жағыпар', last_login=datetime.now())
        user = User.objects.create_user(username='user20', password='Uu0066+-', email='user20@mail.ru', first_name='Жастілек', last_name='Жасталап', last_login=datetime.now())
        user = User.objects.create_user(username='user21', password='Uu0066+-', email='user21@mail.ru', first_name='Еркебұлан', last_name='Қадыхан', last_login=datetime.now())
        user = User.objects.create_user(username='user22', password='Uu0066+-', email='user22@mail.ru', first_name='Молдир', last_name='Бутабекова', last_login=datetime.now())
        user = User.objects.create_user(username='user23', password='Uu0066+-', email='user23@mail.ru', first_name='Аружан', last_name='Таурбекова', last_login=datetime.now())
        user = User.objects.create_user(username='user24', password='Uu0066+-', email='user24@mail.ru', first_name='Алтынай', last_name='Қожанова', last_login=datetime.now())
        user = User.objects.create_user(username='user25', password='Uu0066+-', email='user25@mail.ru', first_name='Эльнара', last_name='Иминова', last_login=datetime.now())
        print("Созданы простые пользователи")

        # Добавить Факультеты, специальности и группы
        parameters = ["5B070300", "Информационные системы", get_faculty(apps, "Математики и информационных технологий")]
        insert_speciality(apps, parameters)

        parameters = ["ИС-23-1к", 1, "Казахский"]
        insert_gruppa(apps, parameters)

        parameters = ["ИС-23-1р", 1, "Русский"]
        insert_gruppa(apps, parameters)

        parameters = ["ИС-23-2к", 2, "Казахский"]
        insert_gruppa(apps, parameters)

        parameters = ["ИС-23-2р", 3, "Русский"]
        insert_gruppa(apps, parameters)

        parameters = ["B070400", "Вычислительная техника и программное обеспечение", get_faculty(apps, "Математики и информационных технологий")]
        insert_speciality(apps, parameters)

        parameters = ["5B012600", "Математика-Физика", get_faculty(apps, "Физико-технический")]
        insert_speciality(apps, parameters)

        print("Факультеты, специальности и группы ok")

        # Добавить Студенты 1-20 группа id 1,  21-40 группа id 2, 41-60 группа id 3,  61-80 группа id 4

        parameters = ["Бейсембек Әлішер Ербулатұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Мугынова Амина Санатқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Кадылкаиров Алибек Муратович", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Турсунова Карина Муратовна", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Конысбай Азамат Бахытжанулы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Сали Малика Нағыйқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Киселев Илья Александрович", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Уранхаева Еркежан Айдосовна", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Балғабек Қайырхан Мелдеханұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Кузенбекова Асемгуль Шеризаткызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Амантаев Алимжан Серикович", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Ногай Анастасия Владиславовна", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Нуралибеков Сардор Шухратович", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Курмашева Алина Каиржановна", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Орлов Максим Сергеевич", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Акимова Юлия Николаевна", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Қабылбек Тимур Талғатұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Жүнісова Ақниет Болатқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Алушаев Еділ Бахитжанұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)

        parameters = ["Жүнісова Ақерке Үсібәліқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 1]
        insert_student(apps, parameters)


        parameters = ["Антонюк Владислав Викторович", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Мухамбеткалиева Диана Асылкановна", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Михаилов Даниел Михаилов", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Жиентаева Диана Расуловна", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Ермаков Александр Владимирович", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Казбекова Алина Нурлановна", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Сабыржан Темірлан Берікұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Аубакирова Гаухар Талгатовна", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Қабаржан Жеңісбай Кенжетайұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Майленова Аягоз Талгаткызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters) 
        
        parameters = ["Рамазанов Аргын Ерланович", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Мұхтарова Аружан Қазбекқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Беспаев Адиль Айдарулы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Молшылық Айбану Батырбекқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Серикбаев Нурислам Базаралиугли", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Иса Дана Жубаткановна", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Майданов Серік Маратұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Хаятуллаева Гаухар Нұрғалықызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Уразбаев Абзал Темирбулатович", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)

        parameters = ["Орынбай Лаура Орынбайқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 2]
        insert_student(apps, parameters)
        

        
        parameters = ["Нұрділдаев Батухан Оразайұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Жанабекова Алтынай Жанабековна", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Қожанәсіп Асылхан Азаматұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Секербаева Амина Айдосқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Латиф Қайырбек Нұрғалиұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Саматова Мөлдір Берғазықызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Әбішев Ақбота Болатұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Киясова Дария Маликовна", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Әбдіхалық Есен Үсенұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Малғаждарова Ақмаржан Маратқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters) 
        
        parameters = ["Мәжит Данияр Бақтиярұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Хасенова Эльмира Серікқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Масонов Ернур Жасуланұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Баяхметова Қаламқас Ерліханқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Шариханов Данияр Бисенбиұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Байғараева Жаңыл Ермашқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Адай Нұрсейт Жақыпұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Шаяхметова Ақбота Саадатқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Тасмурзаев Нурдәулет Мұсаханұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)

        parameters = ["Әмірхан Бақыт Жұбайханқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 3]
        insert_student(apps, parameters)
        

        
        parameters = ["Тохтарханов Сұлтан Нұрхатұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Беркінбекова Айнұр Қайратқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Санбаев Аскар Марсулы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Еримбетова Майра Мирамбайкызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Бахыт Мейіржан Нұрболұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Есенжанова Айнаш Серікқалиқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Карамурзаев Найман Абдыевич", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Мустахова Диана Ерланқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Елубаев Наурызбек Нұрланұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Қалибай Қанағат Балтабайқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters) 
        
        parameters = ["Махметов Темирлан Муратович", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Муратова Зарина Уразгалиевна", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Төлеуов Елнар Қуанұлы", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Әшімбек Жансулу Султанбекқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Оразтаев Дастан Мадениетович", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Баязитова Самал Асылбекқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Абдусадиков Садир Маннабугли", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Имашева Аяулым Қайратқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Сериков Нурсултан Талгатбекович", "М", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)

        parameters = ["Сағын Аружан Сағынқызы", "Ж", get_random_date(datetime.strptime("01.09.2005", "%d.%m.%Y"), datetime.strptime("31.08.2006", "%d.%m.%Y")), get_telefon(), get_adres(True), 4]
        insert_student(apps, parameters)
        
        print("Студенты ok")

        #########################################################################
        
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 9, 0) - timedelta(days=14)
        
        parameters = [schedule_datetime, get_discipline(apps, "Информационно-коммуникационные технологии"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [1, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Профессиональный казахский(русский) язык"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [2, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Теория вероятности и математическая статистика"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [3, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Введение в программирование"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [4, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 11, 0) - timedelta(days=14)
        
        parameters = [schedule_datetime, get_discipline(apps, "Введение в программирование"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [5, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Информационно-коммуникационные технологии"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [6, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Профессиональный казахский(русский) язык"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [7, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Теория вероятности и математическая статистика"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [8, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 13, 0) - timedelta(days=14)
        
        parameters = [schedule_datetime, get_discipline(apps, "Теория вероятности и математическая статистика"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [9, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Введение в программирование"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [10, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Информационно-коммуникационные технологии"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [11, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Профессиональный казахский(русский) язык"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [12, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
                
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 16, 0) - timedelta(days=14)
        
        parameters = [schedule_datetime, get_discipline(apps, "Профессиональный казахский(русский) язык"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [13, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Теория вероятности и математическая статистика"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [14, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Введение в программирование"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [15, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Информационно-коммуникационные технологии"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [16, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        #########################################################################
        
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 9, 0) - timedelta(days=13)
        
        parameters = [schedule_datetime, get_discipline(apps, "Управление данными и информацией"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [17, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Компьютерные сети"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [18, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Дискретная математика"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [19, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Информационная безопасность и защита информации"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [20, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 11, 0) - timedelta(days=13)
        
        parameters = [schedule_datetime, get_discipline(apps, "Информационная безопасность и защита информации"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [21, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Управление данными и информацией"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [22, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Компьютерные сети"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [23, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Дискретная математика"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [24, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 13, 0) - timedelta(days=13)
        
        parameters = [schedule_datetime, get_discipline(apps, "Дискретная математика"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [25, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Информационная безопасность и защита информации"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [26, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Управление данными и информацией"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [27, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Компьютерные сети"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [28, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
                
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 16, 0) - timedelta(days=13)
        
        parameters = [schedule_datetime, get_discipline(apps, "Компьютерные сети"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [29, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Дискретная математика"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [30, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Информационная безопасность и защита информации"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [31, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Управление данными и информацией"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [32, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

#########################################################################
        
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 9, 0) - timedelta(days=12)
        
        parameters = [schedule_datetime, get_discipline(apps, "Информационно-коммуникационные технологии"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [33, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Профессиональный казахский(русский) язык"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [34, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Теория вероятности и математическая статистика"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [35, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Введение в программирование"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [36, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 11, 0) - timedelta(days=12)
        
        parameters = [schedule_datetime, get_discipline(apps, "Введение в программирование"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [37, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Информационно-коммуникационные технологии"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [38, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Профессиональный казахский(русский) язык"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [39, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Теория вероятности и математическая статистика"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [40, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 13, 0) - timedelta(days=12)
        
        parameters = [schedule_datetime, get_discipline(apps, "Теория вероятности и математическая статистика"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [41, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Введение в программирование"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [42, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Информационно-коммуникационные технологии"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [43, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Профессиональный казахский(русский) язык"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [44, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
                
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 16, 0) - timedelta(days=12)
        
        parameters = [schedule_datetime, get_discipline(apps, "Профессиональный казахский(русский) язык"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [45, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Теория вероятности и математическая статистика"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [46, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Введение в программирование"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [47, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Информационно-коммуникационные технологии"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [48, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        #########################################################################
        
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 9, 0) - timedelta(days=11)
        
        parameters = [schedule_datetime, get_discipline(apps, "Управление данными и информацией"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [49, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Компьютерные сети"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [50, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Дискретная математика"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [51, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Информационная безопасность и защита информации"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [52, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 11, 0) - timedelta(days=11)
        
        parameters = [schedule_datetime, get_discipline(apps, "Информационная безопасность и защита информации"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [53, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Управление данными и информацией"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [54, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Компьютерные сети"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [55, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Дискретная математика"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [56, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 13, 0) - timedelta(days=11)
        
        parameters = [schedule_datetime, get_discipline(apps, "Дискретная математика"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [57, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Информационная безопасность и защита информации"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [58, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Управление данными и информацией"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [59, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Компьютерные сети"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [60, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
                
        # Добавить Расписание (дата, дисциплина, группа), Дисциплиныи и посещение
        schedule_datetime = datetime(datetime.now().year, datetime.now().month, datetime.now().day, 16, 0) - timedelta(days=11)
        
        parameters = [schedule_datetime, get_discipline(apps, "Компьютерные сети"), 1 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)   
        
        for i in range(1, 21):      # Добавить посещение группа 1 
            parameters = [61, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        parameters = [schedule_datetime, get_discipline(apps, "Дискретная математика"), 2 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(21, 41):      # Добавить посещение группа 2 
            parameters = [62, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Информационная безопасность и защита информации"), 3 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(41, 61):      # Добавить посещение группа 3
            parameters = [63, i]
            insert_visit(apps, parameters)   # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)
        
        parameters = [schedule_datetime, get_discipline(apps, "Управление данными и информацией"), 4 ]   # Добавить Расписание (дата, дисциплина, id группы)
        insert_schedule(apps, parameters)
        
        for i in range(61, 81):      # Добавить посещение группа 4 
            parameters = [64, i]
            insert_visit(apps, parameters)  # (id расписания, id студента, посещение/непосещение случайным образом в insert_visit)

        ############################################################################################################
        # Добавить Успеваемость (дата, курс, семестр, дисциплина, студент, оценка случайным образом в insert_rating)
        ############################################################################################################
        rating_datetime = datetime(datetime.now().year, 1, 8, 9, 0)
        
        for i in range(1, 21):  # Добавить Успеваемость группа 1 
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Управление данными и информацией"), i ]
            insert_rating(apps, parameters)  # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)
        
        for i in range(21, 41): # Добавить Успеваемость группа 2
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Компьютерные сети"), i ]
            insert_rating(apps, parameters) # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)
        
        for i in range(41, 61): # Добавить Успеваемость группа 3
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Дискретная математика"), i ]
            insert_rating(apps, parameters)  # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)
        
        for i in range(61, 81): # Добавить Успеваемость группа 4
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Информационная безопасность и защита информации"), i ]
            insert_rating(apps, parameters)  # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)

        # Добавить Успеваемость (дата, курс, семестр, дисциплина, студент, оценка случайным образом в insert_rating)
        rating_datetime = datetime(datetime.now().year, 1, 11, 9, 0)
        
        for i in range(1, 21):  # Добавить Успеваемость группа 1 
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Компьютерные сети"), i ]
            insert_rating(apps, parameters)  # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)
        
        for i in range(21, 41): # Добавить Успеваемость группа 2
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Дискретная математика"), i ]
            insert_rating(apps, parameters) # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)
        
        for i in range(41, 61): # Добавить Успеваемость группа 3
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Информационная безопасность и защита информации"), i ]
            insert_rating(apps, parameters)  # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)
        
        for i in range(61, 81): # Добавить Успеваемость группа 4
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Управление данными и информацией"), i ]
            insert_rating(apps, parameters)  # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)

        # Добавить Успеваемость (дата, курс, семестр, дисциплина, студент, оценка случайным образом в insert_rating)
        rating_datetime = datetime(datetime.now().year, 1, 15, 11, 0)
        
        for i in range(1, 21):  # Добавить Успеваемость группа 1 
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Дискретная математика"), i ]
            insert_rating(apps, parameters)  # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)
        
        for i in range(21, 41): # Добавить Успеваемость группа 2
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Информационная безопасность и защита информации"), i ]
            insert_rating(apps, parameters) # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)
        
        for i in range(41, 61): # Добавить Успеваемость группа 3
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Управление данными и информацией"), i ]
            insert_rating(apps, parameters)  # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)
        
        for i in range(61, 81): # Добавить Успеваемость группа 4
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Компьютерные сети"), i ]
            insert_rating(apps, parameters)  # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)

        # Добавить Успеваемость (дата, курс, семестр, дисциплина, студент, оценка случайным образом в insert_rating)
        rating_datetime = datetime(datetime.now().year, 1, 19, 11, 0)
        
        for i in range(1, 21):  # Добавить Успеваемость группа 1 
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Информационная безопасность и защита информации"), i ]
            insert_rating(apps, parameters)  # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)
        
        for i in range(21, 41): # Добавить Успеваемость группа 2
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Управление данными и информацией"), i ]
            insert_rating(apps, parameters) # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)
        
        for i in range(41, 61): # Добавить Успеваемость группа 3
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Компьютерные сети"), i ]
            insert_rating(apps, parameters)  # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)
        
        for i in range(61, 81): # Добавить Успеваемость группа 4
            parameters = [rating_datetime , 1, 1, get_discipline(apps, "Дискретная математика"), i ]
            insert_rating(apps, parameters)  # (дата, курс, семестр, дисциплина, студент, а оценка случайным образом в insert_rating)
        
        # Добавить Новости

        #parameters = [datetime.now() - timedelta(days=1) + timedelta(minutes=random.randint(1, 120)), "Заголовок", """Детали""", "images/news7.jpg" ]
        parameters = ["2024-03-03", "РОДНОЙ КАЗАХСТАН - ТЫ НАША ЛЮБОВЬ И ОБИТЕЛЬ!", """Сегодня преподаватели, магистранты и студенты факультета иностранных языков были приглашены на встречу-презентацию "Родной Казахстан - ты наша любовь и обитель!", организованную Карагандинским областным филиалом партии "Аманат" в сотрудничестве с Областной комиссией по делам женщин и семейно-демографической политике при акиме Карагандинской области. В рамках мероприятия состоялась презентация книги д.ф.н. Нурсулу Ибраевны Букетовой, профессора кафедры иностранной филологии. Мероприятие прошло в теплой и вдохновляющей атмосфере!""", "images/news1.jpg" ]
        insert_news(apps, parameters)
       
        parameters = [datetime.now() - timedelta(days=6) + timedelta(minutes=random.randint(1, 120)), "ПЕРВЕНСТВО ПО ЛЫЖНЫМ ГОНКАМ", """Сегодня в районе стадиона возле учебного корпуса № 9 состоялось Открытое первенство по лыжным гонкам (эстафета) среди учащихся средних общеобразовательных школ г.Караганды на призы Ректора Карагандинского университета им.Е.А.Букетова.
Главный судья соревнований - Сармантаев А.С.; главный секретарь Сагиева Л.Н.
В соревнованиях приняли участие 6 команд юношей+1 команда юношей участвовала вне конкурса и 4 команды девушек. Всего участников – 44 человека.
Победителями и призерами среди стали юноши ОШ»8- 1 место;
ОШ№17 – 2 место; гимназия №104 – 3 место и СШИ №7 г. Шахтинск.
Среди девушек отличились участники гимназия №104 им.Абая – 1 место;
ОШ№17 – 2 место; ОШ№8 – 3 место и ОШ№18 – 3 место.
В командных соревнованиях лучшими стали: ОШ№8 – 1 место; гимназия №104 – 2 место и ОШ№8 – 3 место.
Все призеры Открытого Первенства награждены ценными призами""", "images/news2.jpg" ]
        insert_news(apps, parameters)
       
        parameters = ["2024-03-05", "Встреча с успешным выпускником, посвященная 40-летию специальности «Педагогика и методика начального обучения»", """1 марта 2024 года в рамках проекта «Встречи с успешными выпускниками», который был посвящен 40-летию специальности «Педагогика и методика начального обучения» состоялась встреча с Сарбасовой Карлыгаш Амангельдиновной, доктором педагогических наук, профессором, действительным членом Академии (академик) Педагогических наук Казахстана, обладателем государственной научной стипендии для талантливых молодых ученых МОН РК, лауреатом международной стипендии «Болашак», обладателем гранта МОН РК «Лучший преподаватель – 2008, 2014», экспертом ARQA Независимое агентство по аккредитации и экспертизе качества образования, ПХВ «Республиканский научно-практический центр экспертизы содержания образования», «Независимое казахстанское агентство по обеспечению качества в образовании», АО «Национальный центр государственной научно-технической экспертизы».
Первый набор студентов с казахским языком обучения был осуществлен через пять лет после открытия специальности «Педагогика и методика начального обучения» в 1989 году, и в числе этих студентов была Карлыгаш Амангельдиновна, которая через 4 года с отличием окончила Карагандинский государственный университет имени академика Е.А. Букетова и получила распределение на кафедру педагогики и методики начального обучения. Так, началась ее профессиональная деятельность от преподавателя университета до профессора, от заведующего кафедрой педагогики и методики начального обучения, заместителя декана педагогического факультета по учебной работе Карагандинского государственного университета имени академика Е.А.Букетова (2011) до декана факультета компьютерных систем и профессионального образования (2018), Директора департамента по академическим вопросам Казахского агротехнического университета имени С. Сейфуллина (2021). Автор более 300 научных и учебно-методических работ. За период работы под ее руководством успешно защищены 2 кандидатских, 2 докторских (PhD) и 15 магистерских работ по педагогике.
В настоящее время К.А. Сарбасова главный эксперт, научный советник НАО «Национальный научно-практический институт благополучия детей «Өркен» при Министерстве Просвещения РК.
Открытый диалог создал атмосферу взаимного обмена опытом и знаний. Обучающиеся образовательной программы «Педагогика и методика начального обучения» получили ответы на волнующие вопросы, ценные рекомендации по развитию своих профессиональных навыков и личностному росту.
За спокойным неторопливым изложением мысли Карлыгаш Амангельдиновны скрывалось мощное содержание: концентрат жизненного и педагогического опыта, ценных наблюдений и полезных профессиональных советов.
Воспоминания Карлыгаш Амангельдиновны и история ее успеха – это не только дань уважения родному Университету Букетова, но и достойный пример для нового поколения обучающихся.""", "images/news3.jpg" ]
        insert_news(apps, parameters)
       
        parameters = ["2024-03-07", "ТОРЖЕСТВЕННАЯ ВСТРЕЧА В ПРЕДДВЕРИИ 8 МАРТА", """В преддверии Международного женского дня руководство Карагандинского университета Букетова организовало торжественную встречу с ППС и сотрудницами университета. В адрес прекрасных женщин с искренними и душевными словами обратился ректор Н.О. Дулатбеков. Он поздравил присутствующих с наступающим праздником и выразил слова благодарности за вклад в развитие университета и высокие достижения в научно-педагогической деятельности. Мероприятие прошло в теплой, душевной обстановке. Звучали волшебные звуки домбры, популярные казахские песни в исполнении руководителя Дворца студентов. В конце встречи ППС и сотрудницам были вручены цветы и подарки""", "images/news4.jpg" ]
        insert_news(apps, parameters)
       
        parameters = ["2024-03-12", "СТУДЕНТЫ БУКЕТОВ УНИВЕРСИТЕТА ПРИНЯЛИ УЧАСТИЕ ВО ВСЕМИРНОМ ФЕСТИВАЛЕ МОЛОДЕЖИ", """На федеральной территории Сириус (Российская Федерация) состоялся Всемирный Фестиваль молодёжи. В нем приняли участие более 20 000 человек из 191 страны мира, представляющие сферы науки, бизнеса, медиа, международного сотрудничества, культуры, волонтёрства, благотворительности, спорта. Карагандинский университет имени академика Е.А. Букетова направил для участия в фестивале команду физико-технического факультета в следующем составе: Перизат Жанбирбаева, докторант 1 курса; Досмухаммед Абеуов, магистрант 1 курса; Чингиз Қабылғани, студент 4 курса; Серик Тулеуов, студент 3 курса; Нурдана Абишева, студентка 2 курса; Алмат Мұхамедрахим, студент 3 курса, а также руководитель Карстина С.Г., д.ф.-м.н., профессор кафедры физики и нанотохнологий.
Программа Всемирного фестиваля молодёжи строилась на таких ценностях, как: единство, равноправие, справедливость, взаимопомощь, командная работа и милосердие. Каждый из дней был посвящен определенной теме: «Ответственность за судьбы мира», «Многонациональное единство», «Мир возможностей для каждого», «Сохраним семью во имя детей и мира».
В рамках работы Всемирного фестиваля молодёжи делегаты участвовали в разных мастер-классах и лекциях.""", "images/news5.jpg" ]
        insert_news(apps, parameters)
       
        parameters = ["2024-03-12", "ВОЛОНТЕРЫ БУКЕТОВ УНИВЕРСИТЕТА ПОЗДРАВИЛИ ЖЕНЩИН-КОНТРОЛЕРОВ С МЕЖДУНАРОДНЫМ ЖЕНСКИМ ДНЕМ", """Команда студентов-волонтеров «Biz barmyz» Карагандинского университета Букетова в составе Жасұлана Жахина, Ерсіна Боранқұлова, Ислама Сайлаубека, Диаса Бакиева поздравила женщин-контролеров автопарка №3 с Международным женским днем 8 марта и вручила им тюльпаны, выращенные в термос-теплице Биолого-географического факультета и сладкие подарки. В этот солнечный предпраздничный день прозвучало много теплых слов из уст ребят, которые пожелали милым дамам здоровья, счастья, благополучия мира и добра. Как известно труд контролеров нелегок и он требует скрупулезности, стрессоуйстойчивости , терпения и доброжелательности. Зачастую им приходится работать в любую погоду – дождь и снег, а также в жару. Женщины были рады неожиданному сюрпризу. Они поблагодарили ребят и пожелали им успехов в учебе, готовности жертвовать своим временем усилиями и навыками для помощи нуждающимся, поддержке социальным и экологическим инициативам и прежде всего способствованию общественного благополучия нашей страны.""", "images/news6.jpg" ]
        insert_news(apps, parameters)
       
        parameters = ["2024-03-04", "Конкурс чтецов акына Мукагали Макатаева", """Слушатели факультета дополнительного образования Карагандинского университета имени Академика Е.А. Букетова приняли участие в конкурсе чтецов акына Мукагали Макатаева на тему «Есіңе мені алғайсың...» организованное филологическим факультетом, в котором участники были награждены грамотами за заневшее III – место Бекболат А., Уатхан Г., а также всем участникам были вручены благодарственные письма Ұлыхпан У., Жанболат Г., Иванов М., Дүнген Р., Қуандыққызы А.""", "images/news7.jpg" ]
        insert_news(apps, parameters)
       
        print("Новости ok")

    except Exception as error:
        print(error)


class Migration(migrations.Migration):

    dependencies = [
        ('journal', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(new_data),        
    ]
